akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.journal.leveldb.dir = "db-data"

akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "db-data-snapshot"

localStores {
    akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
    akka.persistence.journal.leveldb.dir = "db-localStores-data"

    akka.persistence.journal.leveldb.compaction-interval {
        simple-persistence-actor = 1000
        "*" = 5000
    }

    akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    akka.persistence.snapshot-store.local.dir = "db-localStores-data-snapshot"
}

postgresDemo {
    akka.persistence.journal.plugin = "jdbc-journal"
    akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

    akka-persistence-jdbc {
        shared-databases {
            slick {
                profile = "slick.jdbc.PostgresProfile$"
                db {
                    numThreads = 10
                    driver = "org.postgresql.Driver"
                    url = "jdbc:postgresql://localhost:5432/rtjvm"
                    user = "docker"
                    password = "docker"
                }
            }
        }
    }

    jdbc-journal {
        use-shared-db = "slick"
    }

    jdbc-snapshot-store {
        use-shared-db = "slick"
    }
}

cassandraDemo {
    akka.persistence.journal.plugin = "cassandra-journal"
    akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
}

customSerializerDemo {
    akka.persistence.journal.plugin = "cassandra-journal"
    akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

    akka.actor {
        serializers {
            java = "akka.serialization.JavaSerializer"
            rtjvm = "storesserialization.UserRegistrationSerializer"
        }

        serialization-bindings {
            "storesserialization.UserRegistered" = rtjvm
        }
    }
}


eventAdapters {
    akka.persistence.journal.plugin = "cassandra-journal"
    akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

    cassandra-journal {
        event-adapters {
            guitar-inventory-enhancer = "practices.EventAdaptersDemo$GuitarReadEventAdapter"
        }

        event-adapter-bindings {
            "practices.EventAdaptersDemo$GuitarAdded" = guitar-inventory-enhancer
        }
    }
}